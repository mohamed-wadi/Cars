# Generated by Django 5.2.4 on 2025-08-08 16:20

from django.db import migrations, models
import django.db.models.deletion
from django.core.validators import MinValueValidator, MaxValueValidator
from django.utils import timezone

def add_default_timestamps(apps, schema_editor):
    # Ajouter des timestamps par défaut aux modèles existants
    Car = apps.get_model('core', 'Car')
    Agency = apps.get_model('core', 'Agency')
    Service = apps.get_model('core', 'Service')
    Reservation = apps.get_model('core', 'Reservation')
    
    now = timezone.now()
    
    # Mettre à jour les voitures existantes
    for car in Car.objects.all():
        if not hasattr(car, 'created_at'):
            car.created_at = now
            car.updated_at = now
            car.save()
    
    # Mettre à jour les agences existantes
    for agency in Agency.objects.all():
        if not hasattr(agency, 'created_at'):
            agency.created_at = now
            agency.updated_at = now
            agency.save()
    
    # Mettre à jour les services existants
    for service in Service.objects.all():
        if not hasattr(service, 'created_at'):
            service.created_at = now
            service.updated_at = now
            service.save()
    
    # Mettre à jour les réservations existantes
    for reservation in Reservation.objects.all():
        if not hasattr(reservation, 'created_at'):
            reservation.created_at = now
            reservation.updated_at = now
            reservation.save()

class Migration(migrations.Migration):

    dependencies = [
        ('core', '0003_reservation_total_price'),
    ]

    operations = [
        # Ajouter les nouveaux champs aux modèles existants
        migrations.AddField(
            model_name='car',
            name='year',
            field=models.IntegerField(default=2020, validators=[MinValueValidator(1900), MaxValueValidator(2030)]),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='car',
            name='mileage',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='car',
            name='fuel_type',
            field=models.CharField(choices=[('essence', 'Essence'), ('diesel', 'Diesel'), ('hybrid', 'Hybride'), ('electric', 'Électrique')], default='essence', max_length=50),
        ),
        migrations.AddField(
            model_name='car',
            name='transmission',
            field=models.CharField(choices=[('manual', 'Manuelle'), ('automatic', 'Automatique')], default='manual', max_length=50),
        ),
        migrations.AddField(
            model_name='car',
            name='seats',
            field=models.IntegerField(default=5),
        ),
        migrations.AddField(
            model_name='car',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='car',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='agency',
            name='email',
            field=models.EmailField(blank=True, max_length=254, null=True),
        ),
        migrations.AddField(
            model_name='agency',
            name='opening_hours',
            field=models.CharField(default='8h-18h', max_length=200),
        ),
        migrations.AddField(
            model_name='agency',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='agency',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='service',
            name='is_active',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='service',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='service',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='reservation',
            name='status',
            field=models.CharField(choices=[('pending', 'En attente'), ('confirmed', 'Confirmée'), ('cancelled', 'Annulée'), ('completed', 'Terminée')], default='pending', max_length=20),
        ),
        migrations.AddField(
            model_name='reservation',
            name='notes',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='reservation',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='reservation',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        
        # Créer le modèle UserProfile
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('client', 'Client'), ('admin', 'Administrateur')], default='client', max_length=10)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to='auth.user')),
            ],
        ),
        
        # Créer le modèle Contact
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('subject', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('status', models.CharField(choices=[('new', 'Nouveau'), ('in_progress', 'En cours'), ('resolved', 'Résolu'), ('closed', 'Fermé')], default='new', max_length=20)),
                ('admin_response', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        
        # Exécuter la fonction pour ajouter les timestamps par défaut
        migrations.RunPython(add_default_timestamps),
    ]
